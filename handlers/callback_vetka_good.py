from aiogram import types, Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from config import bot

async def vetka_quiz_good_1(call: types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    button_call_7 = InlineKeyboardButton("–•–æ—Ä–æ—à–æ —Å–¥–∞–ª –¥–∑ üíØ",
                                         callback_data="button_call_7")
    button_call_8 = InlineKeyboardButton("–•–æ—Ä–æ—à–æ–µ –Ω–∞—Å—Ç–æ—Ä–µ–Ω–∏–µ",
                                         callback_data="button_call_8")
    markup.add(button_call_7,button_call_8)
    await bot.send_message(call.message.chat.id,'–ü–æ—á–µ–º—É —Ö–æ—Ä–æ—à–æ?',
                           reply_markup=markup)

async def vetka_quiz_good_2_1(call: types.CallbackQuery):
    await bot.send_message(call.message.chat.id,'–ö—Ä–∞—Å–∞–≤—á–∏–∫')

async def vetka_quiz_good_2_2(call: types.CallbackQuery):
    markup = InlineKeyboardMarkup()
    button_call_9 = InlineKeyboardButton("–ü–æ–≥–æ–¥–∞ üåûüåà",
                                         callback_data="button_call_9")
    button_call_10 = InlineKeyboardButton("–ö–∏–Ω–æ üé¨",
                                         callback_data="button_call_10")
    markup.add(button_call_9,button_call_10)
    await bot.send_message(call.message.chat.id,'–ß—Ç–æ —Ç–µ–±—è –æ–±—Ä–∞–¥–æ–≤–∞–ª–æ?',
                           reply_markup=markup)

async def vetka_quiz_good_2_3(call: types.CallbackQuery):
    await bot.send_message(call.message.chat.id,'–£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—è')

async def vetka_quiz_good_2_4(call: types.CallbackQuery):
    await bot.send_message(call.message.chat.id,'–•–æ—Ä–æ—à–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ üçø')






def register_handler_callback(dp: Dispatcher):
    dp.register_callback_query_handler(vetka_quiz_good_1,
                                       lambda call: call.data == "button_call_5")
    dp.register_callback_query_handler(vetka_quiz_good_2_1,
                                       lambda call: call.data == "button_call_7")
    dp.register_callback_query_handler(vetka_quiz_good_2_2,
                                       lambda call: call.data == "button_call_8")
    dp.register_callback_query_handler(vetka_quiz_good_2_3,
                                       lambda call: call.data == "button_call_9")
    dp.register_callback_query_handler(vetka_quiz_good_2_4,
                                       lambda call: call.data == "button_call_10")